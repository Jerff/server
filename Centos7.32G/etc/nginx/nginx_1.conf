
user  apache;
worker_processes  8;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  4096;
    use epoll;
    multi_accept on;
    # multi_accept on;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    #sendfile        on;
    #tcp_nopush     on;
    #keepalive_timeout  65;
    #gzip  on;

    etag on;

    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    ## Proxy
    proxy_redirect off;
    proxy_set_header Host  $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    client_body_buffer_size 128k;
    proxy_connect_timeout  300;
    proxy_send_timeout 300;
    proxy_read_timeout   300;
    proxy_buffers 8 64k;
    proxy_buffer_size 64k;
    proxy_busy_buffers_size    64k;
    proxy_temp_file_write_size 10m;

    #Организовываем кеш для FastCGI сервера, я использую раздел в ram
    fastcgi_cache_path /tmp/fcgi-cache/ levels=1:2   keys_zone=one:10m;
    fastcgi_buffer_size  128k;
    fastcgi_buffer_size 4K;
    fastcgi_buffers  4 256k;
    fastcgi_busy_buffers_size  256k;
    fastcgi_buffers 64 4k;

    #Используем sendfile, но осторожно, если надо отдавать большие файлы,
    #то sendfile случается вредит
    sendfile on;
    #Расширяем буфера отдачи
    output_buffers   32 512k;
    #Ограничиваем размер сегмента отправляемой за одну
    #блокируемую отдачу
    sendfile_max_chunk  128k;
    #Буфер отдачи которы используется для обрабатываемых данных
    postpone_output  1460;
    #Размер хеша для доменных имен.
    server_names_hash_bucket_size 64;
    #Размер данных принемаемых post запросом

    client_max_body_size 100M;

        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 180;
        types_hash_max_size 2048;
        # При ошибках не говорим врагу версию nginx
        server_tokens off;

    # Allow the server to close the connection after a client stops responding.
    reset_timedout_connection on;

    # Send the client a "request timed out" if the body is not loaded by this time.
    client_body_timeout 10;
    # If the client stops reading data, free up the stale client connection after this much time.
    send_timeout 2;

    # выведем барахлишко в сжатом виде
    gzip on;
	gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;
	gzip_disable "msie6";
    gzip_min_length 500;
    gzip_proxied    expired no-cache no-store private auth;
	gzip_vary on;
	gzip_comp_level 6;
	gzip_buffers 16 8k;
	gzip_http_version 1.1;

    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/vhosts/*/*.conf;
}
